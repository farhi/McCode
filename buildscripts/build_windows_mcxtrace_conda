#!/usr/bin/env bash
export CMAKE_BUILD_PARALLEL_LEVEL=${CMAKE_BUILD_PARALLEL_LEVEL:-$(python3 -c "import os;print(os.cpu_count())")}

PATH=$PATH:$PWD/tools/download-tool

if [ "x$1" = "x" ]; then
    # No arguments
    echo Please provide one argument,e.g : $0 2.0
    exit 1;
fi
mkdir -p dist
export WORK=${PWD}
if [ "x$2" != "x" ]; then
    # Build the meta-packages also
    cd meta-pkgs/windows/Support
    if [  -f Miniforge3-Windows-x86_64.exe ]; then
	rm Miniforge3-Windows-x86_64.exe
    fi
    wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Windows-x86_64.exe
    cd ..

    rm -f python-install.bat.in.* python-install.bat docupdate.bat.in.* docupdate.bat
    
    sed s/@VERSION@/${1}/g conda-python-install.bat.in > python-install.bat.in.2
    sed s/@FLAVOR@/mcxtrace/g python-install.bat.in.2 > python-install.bat.in.3
    sed s/@P@/mx/g python-install.bat.in.3 > python-install.bat
    sed s/@VERSION@/${1}/g conda-docupdate.bat.in > docupdate.bat.in.2
    sed s/@P@/mx/g docupdate.bat.in.2 >docupdate.bat.in.3
    sed s/@FLAVOR@/mcxtrace/g docupdate.bat.in.3 > docupdate.bat

    sed s/@VERSION@/${1}/g McXtrace-metapackage64-CONDA.iss > McXtrace-${1}-metapackage64-CONDA.iss
    ls -l McXtrace-${1}-metapackage64-CONDA.iss
    cat McXtrace-${1}-metapackage64-CONDA.iss
    ./iscc McXtrace-${1}-metapackage64-CONDA.iss
    find .
    mv Output/McXtrace-Metapackage-${1}-CONDA-win64.exe dist/
    cp $WORK/INSTALL-McXtrace/Windows/README.md dist/
fi
